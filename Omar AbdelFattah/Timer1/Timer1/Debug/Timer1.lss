
Timer1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000130  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000130  000001a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000090  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000038  00000000  00000000  00000924  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000000f7  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000a4  00000000  00000000  00000a53  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000018d  00000000  00000000  00000af7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000030  00000000  00000000  00000c84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000d6  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000032  00000000  00000000  00000d8a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_7>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e3       	ldi	r30, 0x30	; 48
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 96 00 	jmp	0x12c	; 0x12c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <avr/interrupt.h>
#include "drivers.h"
int LEDNUMBER [2]={3,0};
int main(void)
{
	sei();
  82:	78 94       	sei
	DIO_DDRA=0xFF;
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	8a bb       	out	0x1a, r24	; 26
	DIO_DDRD=0xFF;
  88:	81 bb       	out	0x11, r24	; 17
	DIO_PORTA=0x00;
  8a:	1b ba       	out	0x1b, r1	; 27
	DIO_PORTD=0x00;
  8c:	12 ba       	out	0x12, r1	; 18
	TCCR1B|=   1<<CS11 | 1<<CS10 | 1<<WGM12 ; //WGM10=0 , WGM11=0, WGM12=0 this mode is clear timer on compare match (ctc) 
  8e:	8e b5       	in	r24, 0x2e	; 46
  90:	8b 60       	ori	r24, 0x0B	; 11
  92:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= 1<< OCIE1A; // compare match interrupt enabled 
  94:	89 b7       	in	r24, 0x39	; 57
  96:	80 61       	ori	r24, 0x10	; 16
  98:	89 bf       	out	0x39, r24	; 57
	OCR1A = 3125;
  9a:	85 e3       	ldi	r24, 0x35	; 53
  9c:	9c e0       	ldi	r25, 0x0C	; 12
  9e:	9b bd       	out	0x2b, r25	; 43
  a0:	8a bd       	out	0x2a, r24	; 42
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <main+0x20>

000000a4 <__vector_7>:
    {
	}
			  
}

ISR(TIMER1_COMPA_vect){
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	0f 92       	push	r0
  ac:	11 24       	eor	r1, r1
  ae:	8f 93       	push	r24
  b0:	9f 93       	push	r25
	DIO_PORTD= 1<<LEDNUMBER[0];
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	00 90 60 00 	lds	r0, 0x0060
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <__vector_7+0x1c>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	0a 94       	dec	r0
  c2:	e2 f7       	brpl	.-8      	; 0xbc <__vector_7+0x18>
  c4:	82 bb       	out	0x12, r24	; 18
	LEDNUMBER[0]++;
  c6:	80 91 60 00 	lds	r24, 0x0060
  ca:	90 91 61 00 	lds	r25, 0x0061
  ce:	01 96       	adiw	r24, 0x01	; 1
  d0:	90 93 61 00 	sts	0x0061, r25
  d4:	80 93 60 00 	sts	0x0060, r24
	if (LEDNUMBER[0] > 7){
  d8:	88 30       	cpi	r24, 0x08	; 8
  da:	91 05       	cpc	r25, r1
  dc:	04 f1       	brlt	.+64     	; 0x11e <__vector_7+0x7a>
		DIO_PORTA = 1 <<LEDNUMBER[1];
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	00 90 62 00 	lds	r0, 0x0062
  e6:	02 c0       	rjmp	.+4      	; 0xec <__vector_7+0x48>
  e8:	88 0f       	add	r24, r24
  ea:	99 1f       	adc	r25, r25
  ec:	0a 94       	dec	r0
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <__vector_7+0x44>
  f0:	8b bb       	out	0x1b, r24	; 27
		LEDNUMBER[0]=3;
  f2:	83 e0       	ldi	r24, 0x03	; 3
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	90 93 61 00 	sts	0x0061, r25
  fa:	80 93 60 00 	sts	0x0060, r24
		LEDNUMBER[1]++;
  fe:	80 91 62 00 	lds	r24, 0x0062
 102:	90 91 63 00 	lds	r25, 0x0063
 106:	01 96       	adiw	r24, 0x01	; 1
 108:	90 93 63 00 	sts	0x0063, r25
 10c:	80 93 62 00 	sts	0x0062, r24
		if (LEDNUMBER[1] > 4) LEDNUMBER[1]=0;
 110:	85 30       	cpi	r24, 0x05	; 5
 112:	91 05       	cpc	r25, r1
 114:	24 f0       	brlt	.+8      	; 0x11e <__vector_7+0x7a>
 116:	10 92 63 00 	sts	0x0063, r1
 11a:	10 92 62 00 	sts	0x0062, r1
	}
}
 11e:	9f 91       	pop	r25
 120:	8f 91       	pop	r24
 122:	0f 90       	pop	r0
 124:	0f be       	out	0x3f, r0	; 63
 126:	0f 90       	pop	r0
 128:	1f 90       	pop	r1
 12a:	18 95       	reti

0000012c <_exit>:
 12c:	f8 94       	cli

0000012e <__stop_program>:
 12e:	ff cf       	rjmp	.-2      	; 0x12e <__stop_program>
